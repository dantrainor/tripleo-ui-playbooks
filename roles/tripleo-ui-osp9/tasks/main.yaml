- name: Clone TripleO UI Repo
  git: repo=https://github.com/rdo-management/rdo-director-ui-production.git
       dest=/home/stack/tripleo-ui
       depth=1

- name: Copy app.conf
  copy: src=/home/stack/tripleo-ui/app.conf.sample
        dest=/home/stack/tripleo-ui/app.conf

- name: Set app port  in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=service
            option=bind_port
            value=8889

- name: Set tripleO API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=tripleo
            value="http://{{ undercloud_service_host }}:8585/v1"

- name: Set validations API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=validations
            value="http://{{ undercloud_service_host }}:5001/v1"

- name: Get keystone url
  shell: source ~/stackrc && openstack catalog show keystone | grep publicURL | sed -E 's/^.*(https?:\/\/)[^:]+(:[^ \|]+).*/\1{{ undercloud_service_host }}\2/g'
  register: keystone_url
  args:
    executable: /bin/bash

- name: Set keystone API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=keystone
            value={{ keystone_url.stdout }}

- name: Get heat url
  shell: source ~/stackrc && openstack catalog show heat | grep publicURL | sed -E 's/^.*(https?:\/\/)[^:]+(:[^ \|]+).*/\1{{ undercloud_service_host }}\2/g'
  register: heat_url
  args:
    executable: /bin/bash

- name: Set heat API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=heat
            value={{ heat_url.stdout }}

- name: Get swift url
  shell: source ~/stackrc && openstack catalog show swift | grep publicURL | sed -E 's/^.*(https?:\/\/)[^:]+(:[^ \|]+).*/\1{{ undercloud_service_host }}\2/g'
  register: swift_url
  args:
    executable: /bin/bash

- name: Set swift API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=swift
            value={{ swift_url.stdout }}

- name: Get ironic url
  shell: source ~/stackrc && openstack catalog show ironic | grep publicURL | sed -E 's/^.*(https?:\/\/)[^:]+(:[^ \|]+).*/\1{{ undercloud_service_host }}\2/g'
  register: ironic_url
  args:
    executable: /bin/bash

- name: Set ironic API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=ironic
            value={{ ironic_url.stdout }}

- name: Get mistral url
  shell: source ~/stackrc && openstack catalog show mistral | grep publicURL | sed -E 's/^.*(https?:\/\/)[^:]+(:[^ \|]+).*/\1{{ undercloud_service_host }}\2/g'
  register: mistral_url
  args:
    executable: /bin/bash

- name: Set mistral API URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=mistral
            value={{ mistral_url.stdout }}

- name: Set zaqar websocket URL in app.conf
  ini_file: dest=/home/stack/tripleo-ui/app.conf
            section=app
            option=zaqar_websocket_url
            value="ws://{{ undercloud_service_host }}:9000"

- name: Add osp9 unmerged tripleo_ui.js
  copy: src=../files/tripleo_ui.js dest=/home/stack/tripleo-ui/tripleo_ui/static/js/tripleo_ui.js

- name: Add osp9 unmerged tripleo_ui.js.map
  copy: src=../files/tripleo_ui.js.map dest=/home/stack/tripleo-ui/tripleo_ui/static/js/tripleo_ui.js.map

- name: Add osp9 unmerged tripleo_ui_tempstorage_worker.js
  copy: src=../files/tripleo_ui_tempstorage_worker.js dest=/home/stack/tripleo-ui/tripleo_ui/static/js/tripleo_ui_tempstorage_worker.js

- name: Add osp9 unmerged tripleo_ui_tempstorage_worker.js.map
  copy: src=../files/tripleo_ui_tempstorage_worker.js.map dest=/home/stack/tripleo-ui/tripleo_ui/static/js/tripleo_ui_tempstorage_worker.js.map

- name: Add osp9 unmerged base.css
  copy: src=../files/base.css dest=/home/stack/tripleo-ui/tripleo_ui/static/css/base.css

- name: Add osp9 unmerged app.py 
  copy: src=../files/app.py dest=/home/stack/tripleo-ui/tripleo_ui/app.py

- name: Check for existing tripleo-ui tmux session
  shell: tmux ls | grep tripleo-ui | wc -l
  register: tripleo_ui_session_exists

- name: Kill existing tripleo-ui tmux session
  shell: tmux kill-session -t tripleo-ui
  ignore_errors: yes
  when: tripleo_ui_session_exists.stdout == "1"

- name: Create tmux session
  shell: tmux new -s tripleo-ui -d && tmux send-keys -t tripleo-ui 'cd ~/tripleo-ui' C-m && tmux send-keys -t tripleo-ui 'tox -e venv tripleo-ui -- --config-file app.conf' C-m
